{% liquid
  assign id = section.id
%}
{% assign collegiate_list = shop.metaobjects.collegiate_list.values %}
<style>
                #shopify-section-{{id}} {
                  box-sizing: border-box;
                  margin-top: {{section.settings.margin_top | append: 'px'}};
                  margin-bottom: {{section.settings.margin_bottom | append: 'px'}};
                  padding-top: {{section.settings.padding_top | append: 'px'}};
                  padding-bottom: {{section.settings.padding_bottom | append: 'px'}};
                  /* background-image: url("{{ section.settings.image | image_url }}");
                  background-size: 100%;
                  background-position: center; */
                }

                @media(max-width: 768px) {
                  #shopify-section-{{id}} {
                    margin-top: {{section.settings.margin_top_m | append: 'px'}};
                    margin-bottom: {{section.settings.margin_bottom_m | append: 'px'}};
                    padding-top: {{section.settings.padding_top_m | append: 'px'}};
                    padding-bottom: {{section.settings.padding_bottom_m | append: 'px'}};
                  }
                }

              .sec-{{ id }}{

            .wrapper-{{ id }} {
                /* max-width: 900px; */
                /* max-height: 70vh; */
                /* max-height: 600px; */
                /* padding: var(--Spacing-Container-lg, 40px) var(--Spacing-Container-md, 24px) var(--Spacing-Container-0, 0px) var(--Spacing-Container-md, 24px); */
                padding: var(--Spacing-Container-lg, 40px) var(--Spacing-Container-md, 24px) ;
                margin-inline: auto;
                /* border-radius: 16px; */
                /* background: #F5F5F5; */
                /* backdrop-filter: blur(8px); */
                /* overflow-y: scroll; */
            }
        ::-webkit-scrollbar {
          width: 0;
        }

            .wrapper.accordion-wrapper.accordion-wrapper--{{ section.id }} {
                display: flex;
                flex-direction: column;
                gap: var(--Spacing-Container-lg, 40px);
            }
      select:focus-visible {
          outline: unset;
          outline-offset: unset;
          box-shadow: unset;
      }




        .accordion{
          svg.--plus {
            display: none;
            /* display: block; */
            /* opacity: 1; */
        }
          svg.--minus {
            display: none;
            /* opacity: 0; */
          }
        }
        .accordion.active{
          svg.--plus {
            display: none;
            /* opacity: 0; */
        }
          svg.--minus {
            display: block;
            /* opacity: 1; */
          }
        }

            h2.--section-title {
                color: var(--Content-Base-main, #1F2937);
                /* font-family: var(--font-family-Title, "Neue Plak"); */
                /* font-size: var(--Font-Size-Heading-H2, 40px); */
                /* font-style: normal; */
                font-weight: 400;
                line-height: var(--Line-Height-Heading-H2, 40px);
                letter-spacing: -0.4px;
                margin-block: 0;
            }
            .acr-title {
                display: flex;
                align-items: center;
                justify-content: space-between;
                padding-block: 2px;
                border-bottom: 2px solid #000;
                cursor: pointer;
            }


            h3.--tab-title {
                color: var(--Content-Base-base, #4B5563);
                font-family: var(--font-family-Title, "Neue Plak");
                font-size: var(--Font-Size-Heading-H3, 20px);
                font-weight: 400;
                line-height: var(--Line-Height-Heading-H3, 24px);
                letter-spacing: -0.4px;
                margin-block: 0;
            }



            .--cards-container {
                display: flex;
                flex-wrap: wrap;
                gap: var(--Spacing-Container-xxs, 8px);
                padding-top: var(--Spacing-Container-xs, 12px);
                @media(max-width: 600px){
                  /* justify-content: space-between; */
                }
            }


            .--card {
                position: relative;
                max-width: 120px;
                text-align: center;
                @media(max-width: 600px){
                      max-width: unset;
                      width: 32%;
                }
            }
            span.--card-title {
                max-width: 78px;
                display: block;
                margin-inline: auto;
                color: #000;
                font-family: var(--font-family-Body, "Neue Plak");
                font-size: var(--Font-Size-Paragraph-Tiny, );
                line-height: var(--Line-Height-Paragraph-Tiny, );
            }
            img.--card-image {
                margin-inline: auto;
                aspect-ratio: 1;
                object-fit: contain;
            }
          .--empty-message {
              color: #000;
          }


    /* Fairway Styling            */
    .--top-block {
        display: flex;
        align-items: flex-end;
        justify-content: space-between;
        margin-bottom: var(--Spacing-Container-lg, 32px);
    }
    .--alphabets {
        display: flex;
        gap: var(--Spacing-Container-xs, 12px);
        justify-content: flex-end;
    }
    span.--collegiate-filter-element-dektop {
        color: var(--Content-Base-base, #4B5563);
        font-family: var(--font-family-Body, "Aktiv Grotesk");
        font-size: var(--Font-Size-Paragraph-Medium, 18px);
        font-style: normal;
        font-weight: 400;
        line-height: var(--Line-Height-Paragraph-Medium, 26px);
        cursor: pointer;
        padding-inline: 4px;
        transition: .5s ease;
        border-bottom: 2px solid #00000000;
    }
    span.--collegiate-filter-element-dektop.--active-element {
        border-bottom: 2px solid #000;
    }
    .accordion {
      transition: .5s ease;
    }
    .--desktop-only{
      @media(max-width:600px){
        display: none!important
      }
    }
    .--mobile-only{
      @media(min-width:601px){
        display: none!important
      }
    }

  }
</style>

<div class="sec-{{ id }}">
  <div class="{% unless section.settings.full_width %}page-width{% endunless %}">
    <div class="wrapper-{{ id }}">
      <div class="--top-block">
        <h2 class="--section-title">{{ section.settings.title }}</h2>
        <div class="--alphabets --desktop-only">
          <span data-title="collegiate-group-all" class="--collegiate-filter-element-dektop --active-element">All</span>
          {% for x in collegiate_list %}
            {% if x.list_label != blank and x.collegiate_brands != blank %}
              <span
                data-title="collegiate-group-{{ x.list_label | downcase }}"
                class="--collegiate-filter-element-dektop"
              >
                {{ x.list_label -}}
              </span>
            {% endif %}
          {% endfor %}
        </div>
        <select class="--mobile-only" name="collegiate-group-mobile " id="collegiate-group-mobile">
          <option value="collegiate-group-all">All</option>
          {% for x in collegiate_list %}
            {% if x.list_label != blank and x.collegiate_brands != blank %}
              <option value="collegiate-group-{{ x.list_label | downcase }}">{{ x.list_label }}</option>
              <!-- <span data-title="collegiate-group-{{ x.list_label | downcase }}">{{ x.list_label }}</span> -->
            {% endif %}
          {% endfor %}
        </select>
      </div>

      <accordion-element>
        <div class="wrapper accordion-wrapper accordion-wrapper--{{ section.id }}">
          {% for x in collegiate_list %}
            {% if x.list_label != blank and x.collegiate_brands != blank %}
              <div class="accordion" data-title="collegiate-group-{{ x.list_label | downcase }}">
                <div class="acr-title">
                  <h3 class="--tab-title">{{ x.list_label | upcase }}</h3>
                </div>
                <div class="acr-content">
                  <div class="--cards-container">
                    {% for card in x.collegiate_brands.value %}
                      <div class="--card">
                        {{ card.image | image_url: width: 60 | image_tag: class: '--card-image' }}
                        <span class="--card-title">{{ card.title }}</span>
                        <a class="absolute-link" href="{{ card.collection.value.url }}"> </a>
                      </div>
                    {% endfor %}
                  </div>
                </div>
              </div>
            {% endif %}
          {% endfor %}
        </div>
      </accordion-element>

      <script>
                document.addEventListener("DOMContentLoaded", () => {
          // Get the mobile select element, desktop filter elements, and accordion divs
          const mobileSelect = document.getElementById("collegiate-group-mobile");
          const desktopFilterElements = document.querySelectorAll(".--collegiate-filter-element-dektop");
          const accordionDivs = document.querySelectorAll(".accordion");

          // Function to update visibility based on the selected value
          const updateDivVisibility = (selectedValue) => {
            accordionDivs.forEach(div => {
              if (selectedValue === "collegiate-group-all") {
                div.style.display = "block";
              } else {
                div.style.display = (div.dataset.title === selectedValue) ? "block" : "none";
              }
            });
          };

          // Add click event listeners for desktop filter elements
          desktopFilterElements.forEach(element => {
            element.addEventListener("click", (event) => {
              event.preventDefault();
              // Remove the active class from all desktop filter elements
              desktopFilterElements.forEach(el => el.classList.remove("--active-element"));

              // Add the active class to the clicked element
              event.currentTarget.classList.add("--active-element");
              const selectedValue = event.currentTarget.dataset.title;
              console.log("Clicked:", selectedValue);
              updateDivVisibility(selectedValue);
            });
          });

          // Add change event listener for the mobile select element
          if (mobileSelect) {
            mobileSelect.addEventListener("change", (event) => {
              const selectedValue = event.target.value;
              updateDivVisibility(selectedValue);
            });
            // Trigger the update on page load using the current selection
            updateDivVisibility(mobileSelect.value);
          } else {
            console.warn("Mobile select element not found.");
          }
        });
      </script>
    </div>
  </div>
</div>

{% schema %}
{
  "name": "Collegiate Apparel",
  "settings": [
    {
      "type": "checkbox",
      "id": "full_width",
      "label": "Full Width Section",
      "default": true
    },
    {
      "type": "header",
      "content": "Section Content"
    },
    {
      "type": "text",
      "id": "title",
      "label": "Title"
    },

    {
      "type": "header",
      "content": "Section Spacing Desktop"
    },
    {
      "type": "range",
      "id": "margin_top",
      "min": 0,
      "max": 100,
      "step": 1,
      "unit": "px",
      "label": "Margin Top",
      "default": 0
    },
    {
      "type": "range",
      "id": "margin_bottom",
      "min": 0,
      "max": 100,
      "step": 1,
      "unit": "px",
      "label": "Margin Bottom",
      "default": 0
    },
    {
      "type": "range",
      "id": "padding_top",
      "min": 0,
      "max": 100,
      "step": 1,
      "unit": "px",
      "label": "Padding Top",
      "default": 48
    },
    {
      "type": "range",
      "id": "padding_bottom",
      "min": 0,
      "max": 100,
      "step": 1,
      "unit": "px",
      "label": "Padding Bottom",
      "default": 48
    },
    {
      "type": "header",
      "content": "Section Spacing Mobile"
    },
    {
      "type": "range",
      "id": "margin_top_m",
      "min": 0,
      "max": 100,
      "step": 1,
      "unit": "px",
      "label": "Margin Top",
      "default": 0
    },
    {
      "type": "range",
      "id": "margin_bottom_m",
      "min": 0,
      "max": 100,
      "step": 1,
      "unit": "px",
      "label": "Margin Bottom",
      "default": 0
    },
    {
      "type": "range",
      "id": "padding_top_m",
      "min": 0,
      "max": 100,
      "step": 1,
      "unit": "px",
      "label": "Padding Top",
      "default": 32
    },
    {
      "type": "range",
      "id": "padding_bottom_m",
      "min": 0,
      "max": 100,
      "step": 1,
      "unit": "px",
      "label": "Padding Bottom",
      "default": 32
    }
  ],

  "presets": [
    
  ]
}
{% endschema %}
